[{"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/index.js":"1","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/App.js":"2","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Reducers/rootReducer.js":"3","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/ForgotPassword.js":"4","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Mdashboard.js":"5","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/RegisterYup.jsx":"6","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Reducers/authTokenReducer.js":"7","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/ProviderScreen.js":"8","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/AdminScreen.js":"9","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeekerScreen.js":"10","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Header.js":"11","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Login.js":"12","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/SpinnerComponent.jsx":"13","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/AddUsersFormik/fields/FieldInputs.jsx":"14","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ManageJobsPage.js":"15","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/ChangePassword.jsx":"16","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ReportPage.js":"17","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ViewShortlistedPage.jsx":"18","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ApplicantPage.js":"19","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ManageApplicantPage.jsx":"20","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/layout/Layout.jsx":"21","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ProvDashboard.js":"22","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/navigation/Navigation.jsx":"23","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ManageJobsPage.jsx":"24","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ReportsPage.jsx":"25","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/AdminDashboardPage.jsx":"26","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/SeekerPages/JobSeekerPage.jsx":"27","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ManageUsersPage.jsx":"28","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/PageNotFound.jsx":"29","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/SeekerPages/AppliedJobsPage.jsx":"30","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Table/dashboardTable.js":"31","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/AddJob.js":"32","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ApplicantTab.js":"33","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/ReactModal.js":"34","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageShortlisted.jsx":"35","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageJobApplicants.jsx":"36","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/ManageTab.jsx":"37","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/AppliedJobsList.jsx":"38","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/JobList.js":"39","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/ReactModal.jsx":"40","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/ManageUsers.jsx":"41","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/ManageJobs.js":"42","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Counters/ProviderCards.jsx":"43","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Counters/AdminCards.jsx":"44","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/JobsTable.jsx":"45","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Reports/Content.jsx":"46","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Report/content/Content.js":"47","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/AddUsersFormik/FormikForm.jsx":"48","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/UserTable.jsx":"49","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Table/TableFooter.js":"50","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/FormTypes.js":"51","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/JobApplicantItem.js":"52","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/JobItem.js":"53","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/ApplyModal.js":"54","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/Job_item.jsx":"55","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/hooks/useTable.js":"56","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/JobItem.jsx":"57","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageShortlistItem.jsx":"58","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageApplicantItem.jsx":"59","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Hooks/useTable.js":"60","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/ManageUserItem.jsx":"61","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/ManageTab.jsx":"62","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/TableFooter.jsx":"63","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Counters/ProviderCard.jsx":"64","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Counters/AdminCard.jsx":"65","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/AddJob.js":"66","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/UserItem.jsx":"67","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/ApplicationForm.js":"68","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/JobItem.js":"69","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/util/dateFormatter.js":"70","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/FormTypes.js":"71","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Media.js":"72","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/contactus.js":"73","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/AboutUs.jsx":"74"},{"size":484,"mtime":1714290120000,"results":"75","hashOfConfig":"76"},{"size":918,"mtime":1714590727287,"results":"77","hashOfConfig":"76"},{"size":195,"mtime":1714290124000,"results":"78","hashOfConfig":"76"},{"size":4074,"mtime":1714290124000,"results":"79","hashOfConfig":"76"},{"size":1152,"mtime":1714290124000,"results":"80","hashOfConfig":"76"},{"size":8928,"mtime":1714563085388,"results":"81","hashOfConfig":"76"},{"size":700,"mtime":1714290124000,"results":"82","hashOfConfig":"76"},{"size":2196,"mtime":1714656807517,"results":"83","hashOfConfig":"76"},{"size":1849,"mtime":1714290120000,"results":"84","hashOfConfig":"76"},{"size":886,"mtime":1714544400441,"results":"85","hashOfConfig":"76"},{"size":4161,"mtime":1714592124219,"results":"86","hashOfConfig":"76"},{"size":6307,"mtime":1714586967394,"results":"87","hashOfConfig":"76"},{"size":218,"mtime":1714290122000,"results":"88","hashOfConfig":"76"},{"size":2424,"mtime":1714290124000,"results":"89","hashOfConfig":"76"},{"size":5048,"mtime":1714406050000,"results":"90","hashOfConfig":"76"},{"size":3439,"mtime":1714290122000,"results":"91","hashOfConfig":"76"},{"size":454,"mtime":1714290124000,"results":"92","hashOfConfig":"76"},{"size":345,"mtime":1714290124000,"results":"93","hashOfConfig":"76"},{"size":330,"mtime":1714290124000,"results":"94","hashOfConfig":"76"},{"size":351,"mtime":1714290124000,"results":"95","hashOfConfig":"76"},{"size":443,"mtime":1714290124000,"results":"96","hashOfConfig":"76"},{"size":1634,"mtime":1714290124000,"results":"97","hashOfConfig":"76"},{"size":5560,"mtime":1714593283266,"results":"98","hashOfConfig":"76"},{"size":388,"mtime":1714290124000,"results":"99","hashOfConfig":"76"},{"size":443,"mtime":1714290124000,"results":"100","hashOfConfig":"76"},{"size":1869,"mtime":1714290124000,"results":"101","hashOfConfig":"76"},{"size":353,"mtime":1714290124000,"results":"102","hashOfConfig":"76"},{"size":5678,"mtime":1714290124000,"results":"103","hashOfConfig":"76"},{"size":202,"mtime":1714290124000,"results":"104","hashOfConfig":"76"},{"size":380,"mtime":1714290124000,"results":"105","hashOfConfig":"76"},{"size":1484,"mtime":1714290122000,"results":"106","hashOfConfig":"76"},{"size":3814,"mtime":1714564159428,"results":"107","hashOfConfig":"76"},{"size":3076,"mtime":1714565660635,"results":"108","hashOfConfig":"76"},{"size":1766,"mtime":1714290122000,"results":"109","hashOfConfig":"76"},{"size":3665,"mtime":1714567832296,"results":"110","hashOfConfig":"76"},{"size":3533,"mtime":1714501518000,"results":"111","hashOfConfig":"76"},{"size":4129,"mtime":1714565789327,"results":"112","hashOfConfig":"76"},{"size":2602,"mtime":1714290122000,"results":"113","hashOfConfig":"76"},{"size":3498,"mtime":1714544691356,"results":"114","hashOfConfig":"76"},{"size":1455,"mtime":1714290122000,"results":"115","hashOfConfig":"76"},{"size":4634,"mtime":1714290124000,"results":"116","hashOfConfig":"76"},{"size":5023,"mtime":1714563977965,"results":"117","hashOfConfig":"76"},{"size":894,"mtime":1714290122000,"results":"118","hashOfConfig":"76"},{"size":1173,"mtime":1714655202276,"results":"119","hashOfConfig":"76"},{"size":1481,"mtime":1714290124000,"results":"120","hashOfConfig":"76"},{"size":7444,"mtime":1714564100512,"results":"121","hashOfConfig":"76"},{"size":7261,"mtime":1714564286679,"results":"122","hashOfConfig":"76"},{"size":6662,"mtime":1714290124000,"results":"123","hashOfConfig":"76"},{"size":1526,"mtime":1714290124000,"results":"124","hashOfConfig":"76"},{"size":667,"mtime":1714290122000,"results":"125","hashOfConfig":"76"},{"size":1212,"mtime":1714290120000,"results":"126","hashOfConfig":"76"},{"size":1105,"mtime":1714565675607,"results":"127","hashOfConfig":"76"},{"size":1707,"mtime":1714564201043,"results":"128","hashOfConfig":"76"},{"size":803,"mtime":1714593024825,"results":"129","hashOfConfig":"76"},{"size":2479,"mtime":1714626178025,"results":"130","hashOfConfig":"76"},{"size":818,"mtime":1714290124000,"results":"131","hashOfConfig":"76"},{"size":547,"mtime":1714290124000,"results":"132","hashOfConfig":"76"},{"size":1171,"mtime":1714567876992,"results":"133","hashOfConfig":"76"},{"size":2777,"mtime":1714655405757,"results":"134","hashOfConfig":"76"},{"size":818,"mtime":1714290122000,"results":"135","hashOfConfig":"76"},{"size":1537,"mtime":1714290124000,"results":"136","hashOfConfig":"76"},{"size":4033,"mtime":1714584750329,"results":"137","hashOfConfig":"76"},{"size":667,"mtime":1714290124000,"results":"138","hashOfConfig":"76"},{"size":726,"mtime":1714290122000,"results":"139","hashOfConfig":"76"},{"size":717,"mtime":1714290122000,"results":"140","hashOfConfig":"76"},{"size":2735,"mtime":1714563868576,"results":"141","hashOfConfig":"76"},{"size":546,"mtime":1714290124000,"results":"142","hashOfConfig":"76"},{"size":7371,"mtime":1714564754646,"results":"143","hashOfConfig":"76"},{"size":1536,"mtime":1714563940554,"results":"144","hashOfConfig":"76"},{"size":286,"mtime":1714290124000,"results":"145","hashOfConfig":"76"},{"size":1061,"mtime":1714290124000,"results":"146","hashOfConfig":"76"},{"size":2668,"mtime":1714624879328,"results":"147","hashOfConfig":"76"},{"size":3069,"mtime":1714624979447,"results":"148","hashOfConfig":"76"},{"size":8592,"mtime":1714624284315,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"f2o8ka",{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"153"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"153"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"153"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"153"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"153"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"153"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"153"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/index.js",[],[],["383","384"],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/App.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Reducers/rootReducer.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/ForgotPassword.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Mdashboard.js",["385"],[],"import { useSelector } from \"react-redux\";\nimport AdminScreen from \"../../AdminScreen\";\nimport Login from \"./Login\";\nimport ProviderScreen from \"../../ProviderScreen\";\nimport JobSeekerScreen from \"../../JobSeekerScreen\";\nimport jwtDecode from \"jwt-decode\";\n\nfunction Mdashboard() {\n  // const dispatch = useDispatch();\n  const selectauthToken = (rootstate) => rootstate.authToken;\n\n  const authToken = localStorage.getItem(\"token\");\n  const redToken = useSelector(selectauthToken);\n\n  // if(redToken == {}){\n  //   if(authToken){\n  //     dispatch({type:\"SETAUTHTOKEN\",data:authToken});\n  //   }\n  // }\n\n  // if (authToken !== null && redAuthToken == {}) {\n  //   dispatch({ type: \"SETAUTHTOKEN\", data: authToken });\n  // }\n\n  if (authToken) {\n    const redAuthToken = jwtDecode(authToken);\n    // console.log(\"lol\", decoded);\n    if (redAuthToken.role === \"Admin\") {\n      return <AdminScreen />;\n    }\n    if (redAuthToken.role === \"Job Provider\") {\n      return <ProviderScreen />;\n    }\n    if (redAuthToken.role === \"User\") {\n      return <JobSeekerScreen />;\n    }\n  }\n  return (\n    <>\n      <Login />\n    </>\n  );\n}\n\nexport default Mdashboard;\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/RegisterYup.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Reducers/authTokenReducer.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/ProviderScreen.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/AdminScreen.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeekerScreen.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Header.js",["386","387","388"],[],"import React from \"react\";\nimport { Navbar, Container ,Nav,Button,NavDropdown} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Register.module.css\";\n// import { BsSearch } from \"react-icons/bs\";\n\nfunction Header() {\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" style={{ backgroundColor: '#FAC9FF' }} variant=\"light\">\n        <Container >\n          <Navbar.Brand className=\" text-primary font-italic \" href=\"/login\">\n            {/* <i className=\"bi bi-search\"></i> */}\n            <span className=\"d-flex\">\n              <img src=\"logo.png\" style={{ width: '50px', height: '50px', marginRight: '6px' }}/>\n              <h1 >Avsar </h1>\n            </span>\n          </Navbar.Brand>\n          <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          />\n         <Navbar.Collapse\n         id=\"responsive-navbar-nav\"\n          >\n            {/*<Nav style={{ marginLeft: \"70px\",width:\"140px\" }}>     \n                <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/register\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                Job Courses\n              </NavLink>\n            </Nav>*/}\n\n<Nav style={{ marginLeft: \"70px\",width:\"140px\" }}>     \n                <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/aboutus\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                About Us\n              </NavLink>\n            </Nav>\n\n            <Nav style={{ marginLeft: \"90px\" ,width:\"100px\" }}>\n            <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/media\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                Media\n              </NavLink>\n            </Nav>\n\n            <Nav style={{ marginLeft: \"80px\" ,width:\"100px\" }}>\n            <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/home\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                  Home\n                  </NavLink>\n            </Nav>\n\n            <Nav style={{ marginLeft: \"80px\" ,width:\"100px\" }}>\n            <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/login\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                    Login\n                    </NavLink>\n              </Nav>\n\n              <Nav style={{ marginLeft: \"80px\" ,width:\"100px\" }}>\n            <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/register\"\n                style={{ color: 'blue' ,fontSize: '25px'}}\n              >\n                    Register\n                    </NavLink>\n              </Nav>\n\n         <Nav>           \n            <NavDropdown\n              id=\"nav-dropdown-dark-example\"\n              menuVariant=\"light\"\n              align=\"end\"\n              className={classes.user}\n              style={{width:\"200px\",fontSize:\"50px\",height:\"80px\"}}\n            >\n              <NavDropdown.Item href=\"./aboutus\">\n               About Us\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n\n              <NavDropdown.Item href=\"./contactus\">\n                Contact Us\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n\n              <NavDropdown.Item href=\"\">\n                Getting Started\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n\n          </Navbar.Collapse> \n        </Container>\n      </Navbar>\n      {/* <h3 className=\"m-5 font-italic\"> Find the Job that fits for you</h3> */}\n    </div>\n  );\n}\n\nexport default Header;\n",["389","390"],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Login.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/SpinnerComponent.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/AddUsersFormik/fields/FieldInputs.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ManageJobsPage.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/ChangePassword.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ReportPage.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ViewShortlistedPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ApplicantPage.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ManageApplicantPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/layout/Layout.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/ProviderPages/ProvDashboard.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/navigation/Navigation.jsx",["391"],[],"import React from \"react\";\n\nimport { Link, useNavigate, NavLink } from \"react-router-dom\";\nimport classes from \"./Navigation.module.css\";\nimport { Navbar, Container, Nav, Dropdown } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport jwtDecode from \"jwt-decode\";\n\nconst Navigation = () => {\n  // const selectauthToken = (rootstate) => rootstate.authToken;\n  // const authToken = useSelector(selectauthToken);\n  // console.log(authToken);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const authToken = localStorage.getItem(\"token\");\n  const redAuthToken = jwtDecode(authToken);\n\n  const logoutHandler = () => {\n    dispatch({ type: \"CLEARAUTHTOKEN\" });\n    navigate(\"/\", { replace: true });\n  };\n\n  return (\n    <Navbar\n      fixed=\"top\"\n      variant=\"light\"\n      expand=\"md\"\n      className={classes.nav}\n    >\n      <Container fluid >\n\n        <NavLink\n          // activeClassName={classes.active}\n          className={classes.brand}\n          to=\"/dashboard\"\n          style={{ color: 'blue' }}\n        >\n          <span className={classes.logo}>\n          {/*<i className=\"bi bi-search\"></i>*/}\n            <img src=\"logo.png\" style={{ width: '50px', height: '50px', marginRight: '6px' }}/>\n          </span>\n          Avsar\n        </NavLink>\n        <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n        <Navbar.Collapse id=\"navbar-dark-example\">\n          {redAuthToken.role === \"Admin\" && (\n            <Nav className={`me-auto ${classes.pageLinks}`}>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/manage-users\"\n                style={{ color: 'blue' }}\n              >\n                Users\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/manage-jobs\"\n                style={{ color: 'blue' }}\n              >\n                Jobs\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/reports\"\n                style={{ color: 'blue' }}\n              >\n                Reports\n              </NavLink>\n            </Nav>\n          )}\n          {redAuthToken.role === \"Job Provider\" && (\n            <Nav className={`me-auto ${classes.pageLinks}`}>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/manage-applicants\"\n                style={{ color: 'blue' }}\n              >\n                Applicant\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/manage-jobs\"\n                style={{ color: 'blue' }}\n              >\n                Jobs\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/provider-report\"\n                style={{ color: 'blue' }}\n              >\n                Reports\n              </NavLink>\n            </Nav>\n          )}\n          {redAuthToken.role === \"User\" && (\n            <Nav className={`me-auto ${classes.pageLinks}`}>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/dashboard\"\n                style={{ color: 'blue' }}\n              >\n                Job Oppurtinities\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/media\"\n                style={{ color: 'blue' }}\n              >\n                Media\n              </NavLink>\n              <NavLink\n                className={(navData) =>\n                  navData.isActive ? classes.active : \"\"\n                }\n                to=\"/appliedJobs\"\n                style={{ color: 'blue' }}\n              >\n                Applied Jobs Status\n              </NavLink>\n            </Nav>\n          )}\n          <Nav>\n            <Dropdown align={\"end\"} className={classes.dropDown}>\n              <Dropdown.Toggle className={classes.user}>\n                <span className={classes.username}>\n                  <span className={classes.userLogo}>\n                    <i className=\"bi bi-person-circle\"></i>\n                  </span>\n                  {redAuthToken.userName}\n                </span>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Link to=\"/change-password\" className={classes.changePassword}>\n                  Change Password\n                </Link>\n                <Dropdown.Divider />\n                <Link to=\"/contactus\" className={classes.changePassword}>\n                  Contact Us\n                </Link>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  as={\"button\"}\n                  onClick={logoutHandler}\n                  className={classes.changePassword}\n                >\n                  Logout\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ManageJobsPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ReportsPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/AdminDashboardPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/SeekerPages/JobSeekerPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/ManageUsersPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/AdminPages/PageNotFound.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/pages/SeekerPages/AppliedJobsPage.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Table/dashboardTable.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/AddJob.js",["392"],[],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./AddJob.module.css\";\n\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city:\"\",\n    salary:\"\",\n    companyname:\"\"\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city,\n      salary: props.jobInfo.salary,\n      companyname: props.jobInfo.salary,\n    };\n  }\n\n  const formSubmitHandler = (values, setSubmitting) => {\n    props.onAdd(values);\n  };\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string()\n      .max(100, \"Must be 100 characters or less\")\n      .required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\"),\n    companyname: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values, { setSubmitting }) => {\n          const editedValues = { ...props.jobInfo, ...values };\n          // setTimeout(() => {\n          //   alert(JSON.stringify(editedValues, null, 2));\n          //   setSubmitting(false);\n          // props.onAdd();\n          // history.push(\"/dashboard\");\n          // }, 400);\n          formSubmitHandler(editedValues, setSubmitting);\n        }}\n      >\n        {(formik) => (\n          // console.log(formik);\n          <Form onSubmit={formik.handleSubmit}>\n            <div>\n              <TextField label=\"Title\" name=\"title\" type=\"text\" />\n              <TextField\n                label=\"Description \"\n                name=\"description\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"City \"\n                name=\"city\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Salary \"\n                name=\"salary\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Category \"\n                name=\"category\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Companyname \"\n                name=\"companyname\"\n                type=\"text-area\"\n              />\n              <TextField label=\"Start date \" name=\"startDate\" type=\"date\" />\n              <TextField label=\"  End date \" name=\"endDate\" type=\"date\" />\n            </div>\n\n            {!props.jobInfo ? (\n              <Button\n                className={classes.submitBtn}\n                type=\"submit\"\n                // onClick={props.onAdd}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItem: \"center\",\n                }}\n              >\n                Add Job\n              </Button>\n            ) : (\n              <>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <Button className={classes.submitBtn} type=\"submit\">\n                    Edit Job\n                  </Button>\n                </div>\n              </>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ApplicantTab.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/ReactModal.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageShortlisted.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageJobApplicants.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/ManageTab.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/AppliedJobsList.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/JobList.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/UI/ReactModal.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/ManageUsers.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/ManageJobs.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Counters/ProviderCards.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Counters/AdminCards.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/JobsTable.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Reports/Content.jsx",["393"],[],"import React from \"react\";\nimport {\n  FormGroup,\n  FormControl,\n  Col,\n  Row,\n  Table,\n  Container,\n  FormLabel,\n} from \"react-bootstrap\";\nimport classes from \"./Content.module.css\";\nimport { useState, useEffect } from \"react\";\nimport useTable from \"../../../hooks/useTable\";\nimport TableFooter from \"../Tables/TableFooter\";\nimport { CSVLink } from \"react-csv\";\nimport axios from \"axios\";\n\nimport Config from \"../../../config/Config.json\";\n// import dateFormat from 'dateformat';\n\nfunction Reports() {\n  const [reportsData, setReportsData] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(reportsData, page, 5);\n\n  const [forminputs, setFormInputs] = useState({});\n  const setFilterDates = useState({\n    startdate: \"\",\n    enddate: \"\",\n  })[1];\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(`${Config.SERVER_URL + \"admin/jobs\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        setReportsData([...res.data.jobs]);\n      });\n  }, []);\n\n  const validateStart = () => {\n    let error = \"\";\n    if (!forminputs[\"startdate\"] && forminputs[\"enddate\"]) {\n      error = \"please enter start date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    }\n    setErrors((values) => ({ ...values, startdate: error }));\n  };\n\n  const validateEnd = () => {\n    let error = \"\";\n    if (!forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      error = \"please enter end date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    } else if (forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      let startdate = new Date(forminputs[\"startdate\"]);\n      let enddate = new Date(forminputs[\"enddate\"]);\n      if (startdate > enddate) {\n        error = \"end date should be greater than start date\";\n      }\n    }\n    setErrors((values) => ({ ...values, enddate: error }));\n  };\n\n  const validate = () => {\n    validateStart();\n    validateEnd();\n    if (errors.startdate || errors.enddate) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validate()) {\n      setFilterDates({ ...forminputs });\n    }\n    let stdate = new Date(forminputs.startdate);\n    let endate = new Date(forminputs.enddate);\n    let newData = reportsData.filter((report) => {\n      // console.log(report);\n      let date = new Date(report.startDate);\n      if (date >= stdate && date <= endate) {\n        return report;\n      }\n      // return;\n    });\n    // console.log(newData);\n    setReportsData(newData);\n  };\n  // console.log(reportsData);\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormInputs((values) => ({ ...values, [name]: value }));\n  };\n  const Jobs = [...reportsData];\n\n  const headers = [\n    {\n      label: \"JobId\",\n      key: \"_id\",\n    },\n    // {\n    //   label: \"ProviderId\",\n    //   key: \"providerId\",\n    // },\n    {\n      label: \"Title\",\n      key: \"title\",\n    },\n    {\n      label: \"StartDate\",\n      key: \"startDate\",\n    },\n    {\n      label: \"Companyname\",\n      key: \"companyname\",\n    },\n    {\n      label: \"EndDate\",\n      key: \"endDate\",\n    },\n  ];\n\n  const csvLink = {\n    headers: headers,\n    data: Jobs,\n    filename: \"csvfile.csv\",\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className={classes.rowStyle}>\n          <Col className={`${classes.repo} col-md-3`}>\n            <span className={classes.span11}>Reports</span>\n          </Col>\n        </Row>\n\n        <Row className={classes.filters}>\n          <Col className={`${classes.str1} ${classes}`}>\n            <FormGroup controlId=\"reportstartdate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>StartDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str2}\n                    onBlur={validateStart}\n                    onChange={handleChange}\n                    name=\"startdate\"\n                    type=\"date\"\n                    placeholder=\"Start Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.startdate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n\n          <Col className={classes.end1}>\n            <FormGroup controlId=\"reportenddate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>EndDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str21}\n                    onBlur={validateEnd}\n                    onChange={handleChange}\n                    name=\"enddate\"\n                    type=\"date\"\n                    placeholder=\"End Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.enddate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n          <Col className={classes.actions}>\n            <Col className={classes.subm}>\n              <button className={classes.buttonsty} onClick={handleSubmit}>\n                Submit\n              </button>\n            </Col>\n            <Col className={classes.expo}>\n              <button className={classes.csvsty}>\n                <CSVLink className={classes.sty11} {...csvLink}>\n                  Export to CSV\n                </CSVLink>\n              </button>\n            </Col>\n          </Col>\n        </Row>\n\n        <div className={classes.tableBox}>\n          <Table striped hover>\n            <thead>\n              <tr className={classes.tableHeader}>\n                {/* <th>JobId</th>\n                <th>providerId</th> */}\n                <th>Title</th>\n                <th>Category</th>\n                <th>City</th>\n                <th>Salary</th>\n                <th>Companyname</th>\n                <th>StartDate</th>\n                <th>EndDate</th>\n                {/* <th>Last Updated</th> */}\n              </tr>\n            </thead>\n            <tbody className={classes.tableBody}>\n              {slice.map((contact) => (\n                <tr key={contact._id}>\n                  {/* <td>{contact.jobId}</td>\n                  <td>{contact.providerId}</td> */}\n                  <td>{contact.title}</td>\n                  <td>{contact.category}</td>\n                  <td>{contact.city}</td>\n                  <td>{contact.salary}</td>\n                  <td>{contact.companyname}</td>\n                  <td>{contact.startDate}</td>\n                  <td>{contact.endDate}</td>\n                  {/* <td>{contact.updatedAt}</td> */}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          {reportsData.length === 0 && (\n            <h3 className=\"text-center fw-bold\">No jobs Data!</h3>\n          )}\n        </div>\n        <TableFooter\n          range={range}\n          slice={slice}\n          setPage={setPage}\n          page={page}\n        />\n      </Container>\n    </>\n  );\n}\nexport default Reports;\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Report/content/Content.js",["394","395"],[],"import React from \"react\";\nimport {\n  FormGroup,\n  FormControl,\n  Col,\n  Row,\n  Table,\n  Container,\n  FormLabel,\n} from \"react-bootstrap\";\nimport classes from \"./Content.module.css\";\nimport { useState, useEffect } from \"react\";\nimport useTable from \"../../../../hooks/useTable\";\nimport TableFooter from \"../../../../components/dashboard/Tables/TableFooter\";\nimport { CSVLink } from \"react-csv\";\nimport axios from \"axios\";\nimport Config from \"../../../../config/Config.json\";\n// import dateFormat from 'dateformat';\n\nfunction Reports() {\n  const [reportsData, setReportsData] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(reportsData, page, 5);\n\n  const [forminputs, setFormInputs] = useState({});\n  const [filterdates, setFilterDates] = useState({\n    startdate: \"\",\n    enddate: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const fetchTd = async () => {\n      const res = await axios.get(`${Config.SERVER_URL + \"provider/jobs/\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      });\n\n      const updatedList = [...res.data.jobs];\n      setReportsData(updatedList);\n    };\n    fetchTd();\n  }, []);\n\n  \n  const validateStart = () => {\n    let error = \"\";\n    if (!forminputs[\"startdate\"] && forminputs[\"enddate\"]) {\n      error = \"please enter start date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    }\n    setErrors((values) => ({ ...values, startdate: error }));\n  };\n\n  const validateEnd = () => {\n    let error = \"\";\n    if (!forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      error = \"please enter end date\";\n    }\n    if (!forminputs[\"startdate\"] && !forminputs[\"enddate\"]) {\n      setErrors({});\n    } else if (forminputs[\"enddate\"] && forminputs[\"startdate\"]) {\n      let startdate = new Date(forminputs[\"startdate\"]);\n      let enddate = new Date(forminputs[\"enddate\"]);\n      if (startdate > enddate) {\n        error = \"end date should be greater than start date\";\n      }\n    }\n    setErrors((values) => ({ ...values, enddate: error }));\n  };\n\n  const validate = () => {\n    validateStart();\n    validateEnd();\n    if (errors.startdate || errors.enddate) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validate()) {\n      setFilterDates({ ...forminputs });\n    }\n    let stdate = new Date(forminputs.startdate);\n    let endate = new Date(forminputs.enddate);\n    let newData = reportsData.filter((report) => {\n      // console.log(report);\n      let date = new Date(report.startDate);\n      if (date >= stdate && date <= endate) {\n        return report;\n      }\n      // return;\n    });\n    // console.log(newData);\n    setReportsData(newData);\n  };\n  // console.log(reportsData);\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormInputs((values) => ({ ...values, [name]: value }));\n  };\n  const Jobs = [...reportsData];\n\n  const headers = [\n    {\n      label: \"JobId\",\n      key: \"jobId\",\n    },\n    {\n      label: \"ProviderId\",\n      key: \"providerId\",\n    },\n    {\n      label: \"Title\",\n      key: \"title\",\n    },\n    {\n      label: \"StartDate\",\n      key: \"startDate\",\n    },\n    {\n      label: \"EndDate\",\n      key: \"endDate\",\n    },\n  ];\n\n  const csvLink = {\n    headers: headers,\n    data: Jobs,\n    filename: \"csvfile.csv\",\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className={classes.rowStyle}>\n          <Col className={`${classes.repo} col-md-3`}>\n            <span className={classes.span11}>Reports</span>\n          </Col>\n        </Row>\n\n        <Row className={classes.filters}>\n          <Col className={`${classes.str1} ${classes}`}>\n            <FormGroup controlId=\"reportstartdate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>StartDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str2}\n                    onBlur={validateStart}\n                    onChange={handleChange}\n                    name=\"startdate\"\n                    type=\"date\"\n                    placeholder=\"Start Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.startdate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n\n          <Col className={classes.end1}>\n            <FormGroup controlId=\"reportenddate\">\n              <Row>\n                <Col>\n                  <FormLabel className={classes.textstyl}>\n                    <b>EndDate</b>\n                  </FormLabel>\n                </Col>\n                <Col className={classes.input}>\n                  <FormControl\n                    className={classes.str21}\n                    onBlur={validateEnd}\n                    onChange={handleChange}\n                    name=\"enddate\"\n                    type=\"date\"\n                    placeholder=\"End Date\"\n                  />\n\n                  <Col className=\"text-danger text-center\">\n                    {errors.enddate}\n                  </Col>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Col>\n          <Col className={classes.actions}>\n            <Col className={classes.subm}>\n              <button className={classes.buttonsty} onClick={handleSubmit}>\n                Submit\n              </button>\n            </Col>\n            <Col className={classes.expo}>\n              <button className={classes.csvsty}>\n                <CSVLink className={classes.sty11} {...csvLink}>\n                  Export to CSV\n                </CSVLink>\n              </button>\n            </Col>\n          </Col>\n        </Row>\n\n        <div className={classes.tableBox}>\n          <Table striped hover>\n            <thead>\n              <tr className={classes.tableHeader}>\n                {/* <th>JobId</th>\n                <th>providerId</th> */}\n                <th>Title</th>\n                <th>description</th>\n                <th>City</th>\n                <th>Salary</th>\n                <th>Category</th>\n                <th>Companyname</th>\n                <th>StartDate</th>\n                <th>EndDate</th>\n              </tr>\n            </thead>\n            <tbody className={classes.tableBody}>\n              {slice.map((contact) => (\n                <tr key={contact._id}>\n                  <td>{contact.title}</td>\n                  <td>{contact.description}</td>\n                  <td>{contact.city}</td>\n                  <td>{contact.salary}</td>\n                  <td>{contact.category}</td>\n                  <td>{contact.companyname}</td>\n                  <td>{contact.startDate}</td>\n                  <td>{contact.endDate}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <TableFooter\n          range={range}\n          slice={slice}\n          setPage={setPage}\n          page={page}\n        />\n      </Container>\n    </>\n  );\n}\nexport default Reports;\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/AddUsersFormik/FormikForm.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/UserTable.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Table/TableFooter.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/FormTypes.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/JobApplicantItem.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/ManageJobs/JobItem.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/ApplyModal.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/Job_item.jsx",["396"],[],"import { Card, ListGroupItem, ListGroup, Button } from \"react-bootstrap\";\nimport classes from \"./Modalf.module.css\";\n\nfunction Jobitem({ item, jobApply }) {\n  const tag = item.title.split(\" \")[0].toLowerCase();\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Card.Title>\n          <h1 style={{ color:\"Purple\"}}>{item.title} Role</h1>\n        </Card.Title>\n      </Card.Body>\n      <ListGroup className=\"list-group-flush\">\n\n        <ListGroupItem>\n          <Card.Text className={classes.city}>\n            {item.city}\n          </Card.Text>\n        </ListGroupItem>\n        \n        <ListGroupItem>\n          <Card.Text className={classes.salary}>\n            {item.salary} per day\n          </Card.Text>\n        </ListGroupItem>\n        <ListGroupItem>\n          <Card.Text className={classes.description}>\n            {item.description}\n          </Card.Text>\n        </ListGroupItem>\n        <ListGroupItem>\n          <h6>{item.category}</h6>\n        </ListGroupItem>\n        <ListGroupItem>\n          <div className={classes.deadlines}>\n            <div>Start Date:</div>\n            <div className={classes.dates}>\n              <i className=\"bi bi-calendar2-check\"></i>\n              <span className=\"mx-2\">{item.startDate}</span>\n            </div>\n          </div>\n        </ListGroupItem>\n\n        <ListGroupItem>\n          <div className={classes.deadlines}>\n            <div>End Date:</div>\n            <div className={classes.dates}>\n              <i className=\"bi bi-calendar-x\"></i>\n              <span className=\"mx-2\">{item.startDate}</span>\n            </div>\n          </div>\n        </ListGroupItem>\n      </ListGroup>\n      <Card.Body>\n        {!item.status && (\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              jobApply(item);\n            }}\n          >\n            Apply Now\n          </Button>\n        )}\n        {item.status && (\n          <Button\n            variant={item.status.includes(\"Applied\") ? \"secondary\" : \"success\"}\n            className={\n              item.status === \"Shortlisted\" ? classes.shortlistedButton : \"\"\n            }\n            disabled={true}\n          >\n            {item.status === \"Shortlisted\" ? (\n              <span>\n                Hired <i className=\"bi bi-heart-fill\"></i>\n              </span>\n            ) : (\n              item.status\n            )}\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Jobitem;\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/hooks/useTable.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/JobItem.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageShortlistItem.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Applicants/ManageApplicantItem.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Hooks/useTable.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageUsers/ManageUserItem.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/ManageTab.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/TableFooter.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/Counters/ProviderCard.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Counters/AdminCard.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/AddJob.js",["397","398"],[],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city: \"\",\n    salary:\"\",\n    companyname:\"\"\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city,\n      salary: props.jobInfo.salary,\n      companyname:props.jobInfo.companyname\n    };\n  }\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string()\n      .max(100, \"Must be 100 characters or less\")\n      .required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\"),\n    companyname: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values, { setSubmitting }) => {\n          const editedValues = { ...props.jobInfo, ...values };\n          props.onAdd(editedValues);\n        }}\n      >\n        {(formik) => (\n          // console.log(formik);\n          <Form onSubmit={formik.handleSubmit} id=\"manageJob-form\">\n            <div>\n              <TextField label=\"Title\" name=\"title\" type=\"text\" />\n              <TextField\n                label=\"Description \"\n                name=\"description\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"City \"\n                name=\"city\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Salary \"\n                name=\"salary\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Category \"\n                name=\"category\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Companyname \"\n                name=\"companyname\"\n                type=\"text-area\"\n              />\n              <TextField label=\"Start date \" name=\"startDate\" type=\"date\" />\n              <TextField label=\"  End date \" name=\"endDate\" type=\"date\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/Tables/UserItem.jsx",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/JobSeeker/ApplicationForm.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/JobItem.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/util/dateFormatter.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/FormTypes.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/Media.js",[],[],"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/contactus.js",["399"],[],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button} from \"react-bootstrap\";\n\nclass ContactUs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => {\n          this.setState({ error: error.message });\n        }\n      );\n    } else {\n      this.setState({ error: \"Geolocation is not supported by this browser.\" });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid bg-light\" style={{ minHeight: \"100vh\" }}>\n        <nav  style={{ backgroundColor:\"#FAC9FF\",width:\"1425px\",height:\"80px\"}}>\n          <div className=\"container\" >\n          <Link className=\"\" to=\"/home\">\n                      <Button\n                        variant=\"success\"\n                        style={{ marginLeft: \"1130px\",marginTop:\"5px\" ,backgroundColor:\"magenta\",height:\"40px\"}}\n                        size=\"lg\"\n                      >\n                        {\" \"}\n                        Home{\" \"}\n                      </Button>\n                    </Link>\n            <center><a className=\"navbar-brand\" href=\"#\" style={{fontSize:\"25px\"}}>Contact Us</a></center>\n            \n          </div>\n        </nav>\n        <div   style={{backgroundColor:\"#C8B5FF\",width:\"1425px\",height:\"627px\"}} >\n            <center >\n          <h1 style={{fontSize:\"60px\",color:\"dark\"}}>AVSAR</h1>\n          <h5 style={{fontSize:\"30px\",color:\"purple\"}}>Connecting With Oppurtunities</h5>\n          </center>\n          <div>\n          <center >\n            <h2 style={{marginTop:\"30px\",fontSize:\"40px\"}}><u>Roll Numbers:</u></h2>\n            <ul style={{fontSize:\"25px\",color:\"purple\"}}>\n              <li>2317</li>\n              <li>2341</li>\n              <li>2327</li>\n              <li>2349</li>\n              <li>2346</li>\n            </ul>\n            </center>\n          </div>\n          <div>\n          <center >\n            <h2  style={{marginTop:\"10px\",fontSize:\"40px\"}}><u>Addresses:</u></h2>\n            <ul>\n              <li style={{fontSize:\"30px\",color:\"purple\"}}>Goa Business School, Goa University, Panaji</li>\n            </ul>\n            </center>\n          </div>\n          <div>\n          <center >\n            <h2 style={{marginTop:\"5px\",fontSize:\"40px\"}}><u>Current Location:</u></h2>\n            {this.state.latitude && this.state.longitude ? (\n              <p style={{fontSize:\"30px\",color:\"purple\"}}>Latitude: {this.state.latitude}, Longitude: {this.state.longitude}</p>\n            ) : (\n              <p>{this.state.error || \"Fetching location...\"}</p>\n            )}\n\n          </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactUs;","/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/login/Components/AboutUs.jsx",[],[],{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":13,"column":9,"nodeType":"406","messageId":"407","endLine":13,"endColumn":17},{"ruleId":"404","severity":1,"message":"408","line":2,"column":33,"nodeType":"406","messageId":"407","endLine":2,"endColumn":39},{"ruleId":"404","severity":1,"message":"409","line":3,"column":10,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"410","severity":1,"message":"411","line":16,"column":15,"nodeType":"412","endLine":16,"endColumn":98},{"ruleId":"400","replacedBy":"413"},{"ruleId":"402","replacedBy":"414"},{"ruleId":"410","severity":1,"message":"411","line":41,"column":13,"nodeType":"412","endLine":41,"endColumn":96},{"ruleId":"404","severity":1,"message":"415","line":7,"column":21,"nodeType":"406","messageId":"407","endLine":7,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":91,"column":47,"nodeType":"418","messageId":"419","endLine":91,"endColumn":49},{"ruleId":"404","severity":1,"message":"420","line":27,"column":10,"nodeType":"406","messageId":"407","endLine":27,"endColumn":21},{"ruleId":"416","severity":1,"message":"417","line":93,"column":47,"nodeType":"418","messageId":"419","endLine":93,"endColumn":49},{"ruleId":"404","severity":1,"message":"421","line":5,"column":9,"nodeType":"406","messageId":"407","endLine":5,"endColumn":12},{"ruleId":"404","severity":1,"message":"415","line":5,"column":21,"nodeType":"406","messageId":"407","endLine":5,"endColumn":32},{"ruleId":"422","severity":1,"message":"423","line":43,"column":5,"nodeType":"424","messageId":"425","endLine":43,"endColumn":11},{"ruleId":"426","severity":1,"message":"427","line":52,"column":21,"nodeType":"412","endLine":52,"endColumn":84},"no-native-reassign",["428"],"no-negated-in-lhs",["429"],"no-unused-vars","'redToken' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["428"],["429"],"'SelectInput' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'filterdates' is assigned a value but never used.","'tag' is assigned a value but never used.","no-dupe-keys","Duplicate key 'salary'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]