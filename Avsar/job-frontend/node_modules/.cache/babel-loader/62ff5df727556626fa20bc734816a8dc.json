{"ast":null,"code":"var _jsxFileName = \"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/AddJob.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./AddJob.module.css\";\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city: \"\"\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city\n    };\n  }\n\n  const formSubmitHandler = (values, setSubmitting) => {\n    props.onAdd(values);\n  }; // VALIDATION\n\n\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validate,\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        const editedValues = { ...props.jobInfo,\n          ...values\n        }; // setTimeout(() => {\n        //   alert(JSON.stringify(editedValues, null, 2));\n        //   setSubmitting(false);\n        // props.onAdd();\n        // history.push(\"/dashboard\");\n        // }, 400);\n\n        formSubmitHandler(editedValues, setSubmitting);\n      },\n      children: formik =>\n      /*#__PURE__*/\n      // console.log(formik);\n      _jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description \",\n            name: \"description\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"City \",\n            name: \"city\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Salary \",\n            name: \"salary\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Category \",\n            name: \"category\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Start date \",\n            name: \"startDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"  End date \",\n            name: \"endDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), !props.jobInfo ? /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.submitBtn,\n          type: \"submit\" // onClick={props.onAdd}\n          ,\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItem: \"center\"\n          },\n          children: \"Add Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.submitBtn,\n              type: \"submit\",\n              children: \"Edit Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/Job Provider/Components/AddJob/AddJob.js"],"names":["React","Formik","Form","Button","classes","TextField","SelectInput","Yup","AddJob","props","initialValues","title","description","startDate","endDate","category","city","jobInfo","formSubmitHandler","values","setSubmitting","onAdd","validate","object","string","max","required","date","salary","editedValues","formik","handleSubmit","submitBtn","display","justifyContent","alignItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./AddJob.module.css\";\n\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city:\"\",\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city,\n    };\n  }\n\n  const formSubmitHandler = (values, setSubmitting) => {\n    props.onAdd(values);\n  };\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string()\n      .max(100, \"Must be 100 characters or less\")\n      .required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values, { setSubmitting }) => {\n          const editedValues = { ...props.jobInfo, ...values };\n          // setTimeout(() => {\n          //   alert(JSON.stringify(editedValues, null, 2));\n          //   setSubmitting(false);\n          // props.onAdd();\n          // history.push(\"/dashboard\");\n          // }, 400);\n          formSubmitHandler(editedValues, setSubmitting);\n        }}\n      >\n        {(formik) => (\n          // console.log(formik);\n          <Form onSubmit={formik.handleSubmit}>\n            <div>\n              <TextField label=\"Title\" name=\"title\" type=\"text\" />\n              <TextField\n                label=\"Description \"\n                name=\"description\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"City \"\n                name=\"city\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Salary \"\n                name=\"salary\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Category \"\n                name=\"category\"\n                type=\"text-area\"\n              />\n              <TextField label=\"Start date \" name=\"startDate\" type=\"date\" />\n              <TextField label=\"  End date \" name=\"endDate\" type=\"date\" />\n            </div>\n\n            {!props.jobInfo ? (\n              <Button\n                className={classes.submitBtn}\n                type=\"submit\"\n                // onClick={props.onAdd}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItem: \"center\",\n                }}\n              >\n                Add Job\n              </Button>\n            ) : (\n              <>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <Button className={classes.submitBtn} type=\"submit\">\n                    Edit Job\n                  </Button>\n                </div>\n              </>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}