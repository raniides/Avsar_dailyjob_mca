{"ast":null,"code":"var _jsxFileName = \"/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/AddJob.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city: \"\",\n    salary: \"\"\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city,\n      salary: props.jobInfo.salary\n    };\n  } // VALIDATION\n\n\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validate,\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        const editedValues = { ...props.jobInfo,\n          ...values\n        };\n        props.onAdd(editedValues);\n      },\n      children: formik =>\n      /*#__PURE__*/\n      // console.log(formik);\n      _jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        id: \"manageJob-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description \",\n            name: \"description\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"City \",\n            name: \"city\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Salary \",\n            name: \"salary\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Category \",\n            name: \"category\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Start date \",\n            name: \"startDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"  End date \",\n            name: \"endDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/raani/Desktop/MINE/Avsarr/Avsar/job-frontend/src/components/dashboard/ManageJobs/AddJob/AddJob.js"],"names":["React","Formik","Form","TextField","SelectInput","Yup","AddJob","props","initialValues","title","description","startDate","endDate","category","city","salary","jobInfo","validate","object","string","max","required","date","values","setSubmitting","editedValues","onAdd","formik","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n    city: \"\",\n    salary:\"\",\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n      city: props.jobInfo.city,\n      salary: props.jobInfo.salary,\n    };\n  }\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string()\n      .max(100, \"Must be 100 characters or less\")\n      .required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    salary: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values, { setSubmitting }) => {\n          const editedValues = { ...props.jobInfo, ...values };\n          props.onAdd(editedValues);\n        }}\n      >\n        {(formik) => (\n          // console.log(formik);\n          <Form onSubmit={formik.handleSubmit} id=\"manageJob-form\">\n            <div>\n              <TextField label=\"Title\" name=\"title\" type=\"text\" />\n              <TextField\n                label=\"Description \"\n                name=\"description\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"City \"\n                name=\"city\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Salary \"\n                name=\"salary\"\n                type=\"text-area\"\n              />\n              <TextField\n                label=\"Category \"\n                name=\"category\"\n                type=\"text-area\"\n              />\n              <TextField label=\"Start date \" name=\"startDate\" type=\"date\" />\n              <TextField label=\"  End date \" name=\"endDate\" type=\"date\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}